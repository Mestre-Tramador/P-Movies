package br.dev.mestretramador.pmovies.config;

import java.util.Objects;

import org.springframework.boot.context.properties.ConfigurationProperties;

/**
 * Properties for OMDb API requests,
 * defined as environment variables.
 *
 * @since                       0.0.1
 * @author                      Mestre-Tramador
 * @param host                  Host (domain name) of the OMDb API.
 * @param key                   Generated access key for the OMDb API.
 * @param subHost               Holds the subdomains for the OMDb API requests.
 * @throws NullPointerException If any data given is <code>null</code>.
 */
@ConfigurationProperties(prefix = "omdb.api")
public record OMDbAPIProperties(
  String host,
  String key,
  OMDbAPISubHosts subHost
) {
  /**
   * The properties cannot be <code>null</code>.
   */
  public OMDbAPIProperties {
    Objects.requireNonNull(host);
    Objects.requireNonNull(key);
    Objects.requireNonNull(subHost);
  }

  /**
   * Read the Domain Name (host) to make OMDb API requests.
   *
   * @return It's a valid URL domain.
   */
  public String host() {
    return host;
  }

  /**
   * Read the authorization key to make OMDb API requests.
   *
   * @return The key is generated by OMDb API.
   */
  public String key() {
    return key;
  }

  /**
   * Read subdomain information.
   *
   * @return The object is an "enumerable" Bean.
   */
  public OMDbAPISubHosts subHost() {
    return subHost;
  }

  /**
   * Directly reads the subdomain to make OMDb Data API requests.
   *
   * @return It's a valid URL subdomain.
   */
  public String subHostData() {
    return subHost().data();
  }

  /**
   * Directly reads the subdomain to make OMDb Poster API requests.
   *
   * @return It's a valid URL subdomain.
   */
  public String subHostPoster() {
    return subHost().poster();
  }
}
